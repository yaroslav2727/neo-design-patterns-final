var l=Object.defineProperty;var d=(s,e,t)=>e in s?l(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var a=(s,e,t)=>d(s,typeof e!="symbol"?e+"":e,t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))r(n);new MutationObserver(n=>{for(const o of n)if(o.type==="childList")for(const c of o.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&r(c)}).observe(document,{childList:!0,subtree:!0});function t(n){const o={};return n.integrity&&(o.integrity=n.integrity),n.referrerPolicy&&(o.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?o.credentials="include":n.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function r(n){if(n.ep)return;n.ep=!0;const o=t(n);fetch(n.href,o)}})();class u{constructor(e){this.raw=e}import(){this.validate();const e=this.map();this.render(e)}}class h{constructor(e){this.d=e}render(){const e=document.createElement("header");e.className="section header";const t=this.d.contacts,r=[];return t.email&&r.push(`Email: ${t.email}`),t.phone&&r.push(`Phone: ${t.phone}`),t.location&&r.push(`Location: ${t.location}`),e.innerHTML=`
      <h1>${this.d.fullName}</h1>
      <p><strong>${this.d.title}</strong></p>
      <p>${r.join(" | ")}</p>
    `,e}}class p{constructor(e){this.d=e}render(){const e=document.createElement("section");return e.className="section summary",e.innerHTML=`
      <h2>Summary</h2>
      <p>${this.d.text}</p>
    `,e}}class m{constructor(e){this.d=e}render(){const e=document.createElement("div");return e.className="project-item",e.textContent=`• ${this.d.name} – ${this.d.description}`,e}}class f{constructor(e){a(this,"wrapped");this.wrapped=e}render(){const e=this.wrapped.render();return e.classList.add("highlight"),e}}class y{constructor(e){this.experiences=e}render(){const e=document.createElement("section");e.className="section experience",e.innerHTML="<h2>Experience</h2>";for(const t of this.experiences){const r=document.createElement("div");if(r.className="experience-item",r.innerHTML=`
        <h3>${t.position} at ${t.company}</h3>
        <p><strong>Period:</strong> ${t.start} — ${t.end}</p>
      `,t.projects&&t.projects.length>0){const n=document.createElement("div");n.className="projects";for(const o of t.projects){const c=new m(o);let i=c.render();o.isRecent&&(i=new f(c).render()),n.appendChild(i)}r.appendChild(n)}e.appendChild(r)}return e}}class w{constructor(e){this.educationList=e}render(){const e=document.createElement("section");e.className="section education",e.innerHTML="<h2>Education</h2>";for(const t of this.educationList){const r=document.createElement("div");r.className="education-item",r.innerHTML=`
        <h3>${t.degree} in ${t.field}</h3>
        <p><strong>Institution:</strong> ${t.institution}</p>
        <p><strong>Graduation:</strong> ${t.graduation}</p>
      `,e.appendChild(r)}return e}}class g{constructor(e){this.d=e}render(){const e=document.createElement("section");e.className="section skills",e.innerHTML="<h2>Skills</h2>";for(const[t,r]of Object.entries(this.d))if(Array.isArray(r)&&r.length>0){const n=document.createElement("div");n.innerHTML=`
          <h3>${t.charAt(0).toUpperCase()+t.slice(1)}</h3>
        `;const o=document.createElement("ul");o.className="skills-list";for(const c of r){const i=document.createElement("li");i.textContent=c,o.appendChild(i)}n.appendChild(o),e.appendChild(n)}return e}}class E{createBlock(e,t){switch(e){case"header":return new h(t.header);case"summary":return new p(t.summary);case"experience":return new y(t.experience);case"education":return new w(t.education);case"skills":return new g(t.skills);default:throw new Error(`Unknown block type: ${e}`)}}}class k extends u{validate(){if(!this.raw||typeof this.raw!="object")throw new Error("Invalid JSON: data must be an object");const e=this.raw,t=["header","summary","experience","education","skills"];for(const r of t)if(!(r in e))throw new Error(`Missing required field: ${r}`);if(typeof e.header!="object"||!e.header)throw new Error("Invalid header structure");if(typeof e.summary!="object"||!e.summary)throw new Error("Invalid summary structure");if(!Array.isArray(e.experience))throw new Error("Experience must be an array");if(!Array.isArray(e.education))throw new Error("Education must be an array");if(typeof e.skills!="object"||!e.skills)throw new Error("Invalid skills structure")}map(){return this.raw}render(e){const t=document.getElementById("resume-content");t.innerHTML="";const r=new E,n=[{type:"header"},{type:"summary"},{type:"experience"},{type:"education"},{type:"skills"}];for(const{type:o}of n){const i=r.createBlock(o,e).render();t.appendChild(i)}}}class ${async init(e){try{const t=await this.fetchData(e);new k(t).import()}catch(t){throw console.error("Failed to initialize resume page:",t),t}}async fetchData(e){try{const t=await fetch(e);if(!t.ok)throw new Error(`Failed to fetch data from ${e}: ${t.statusText}`);return await t.json()}catch(t){throw console.error("Error fetching JSON data:",t),t}}}new $().init("/resume.json");
